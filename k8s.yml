apiVersion: apps/v1
kind: Deployment
metadata:
  name: gothamweb-deployment
  labels:
    app: gotham
spec:
  selector:
    matchLabels:
      app: gotham
      tier: web
  template:
    metadata:
      labels:
        app: gotham
        tier: web
    spec:
      containers:
      - name: frontend
        image: gcr.io/gotham-254312/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 80
      - name: backend
        image: gcr.io/gotham-254312/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
        env:
            - name: DB_HOST
              value: 127.0.0.1:5432
            # [START cloudsql_secrets]
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: DB_NAME
              value: gotham
        readinessProbe:
          httpGet:
            path: /api
            port: 80
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.14
        command: ["/cloud_sql_proxy",
                  "-instances=gotham-254312:europe-west1:gotham-db-instance=tcp:5432",
                  # If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
                  # https://cloud.google.com/sql/docs/mysql/private-ip for more info.
                  # "-ip_address_types=PRIVATE",
                  "-credential_file=gotham-254312-cd30ddd476eb.json"]
        # [START cloudsql_security_context]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        # [END cloudsql_security_context]
        volumeMounts:
          - name: cloudsql-instance
            mountPath: /volumes/database
            readOnly: true
      # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-instance
          secret:
            secretName: cloudsql-instance-credentials
      # [END volumes]
      
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gothamweb-nginx
  labels:
    app: gotham
  annotations:
    kubernetes.io/ingress.class: "nginx"
    certmanager.k8s.io/issuer: "letsencrypt-prod"
    certmanager.k8s.io/acme-challenge-type: http01
    kubernetes.io/ingress.global-static-ip-name: cluster-ip
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: frontend
          servicePort: 80
      - path: /api
        backend:
          serviceName: backend
          servicePort: 80