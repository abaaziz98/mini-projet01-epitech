daemon off;
worker_processes <%= ENV['NGINX_WORKERS'] || 2 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log logs/nginx/access.log l2met;
	error_log logs/nginx/error.log;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#Must read the body in 5 seconds.
	client_body_timeout 5;


  upstream gotham-frontend {
    server 127.0.0.1:8080;
  }

  upstream gotham-backend {
    server 127.0.0.1:3000;
  }

  server {
    listen 80;
    server_name gotham-time-manager.herokuapp.com;

    root /client/dist;

    location / {
      proxy_set_header   Host            $http_host;
      proxy_set_header   X-Real-IP       $remote_addr;
      proxy_set_header   X-NginX-Proxy   true;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_http_version 1.1;
      proxy_redirect     off;
      proxy_buffering    off;
      proxy_pass         http://gotham-frontend;
    }
  }

  server {
    listen 80;
    server_name gotham-time-manager.herokuapp.com;

    root /server/_build;

    location /api {
      proxy_set_header   Host            $http_host;
      proxy_set_header   Upgrade         $http_upgrade;
      proxy_set_header   Connection      "upgrade";
      proxy_set_header   X-Real-IP       $remote_addr;
      proxy_set_header   X-NginX-Proxy   true;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_http_version 1.1;
      proxy_redirect     off;
      proxy_pass         http://gotham-backend;
    }
  }
}